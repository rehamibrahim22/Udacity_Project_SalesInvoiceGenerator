/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ViewPkg;

import ControllerPkg.ButtonsListeners;
import ControllerPkg.ActionListeners;
import ControllerPkg.InvoiceSelectionListeners;
import ModelPkg.InvoiceHeaderCl;
import ModelPkg.InvoiceHeaderTable;
import ModelPkg.InvoiceLinesCl;
import ModelPkg.InvoiceLinesTable;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author reham.ibrahim
 */
public class InvoiceDataFrame extends javax.swing.JFrame implements ActionListener,ListSelectionListener {

   public InvoiceHeaderCl invHeader;
    private InvoiceHeaderTable HeaderTable;
    private InvoiceLinesTable LinesTable;
    private List<InvoiceHeaderCl> invHeaders = new ArrayList<>();
    private DateFormat dataFormat = new SimpleDateFormat("dd-MM-yyyy");
    private InvoiceHeaderDialog headerDialog ;
    
     private ArrayList<InvoiceHeaderCl> headersArray;
    private ArrayList<InvoiceLinesCl> InvLinesArray;
    
    private InvoiceSelectionListeners selectionListener = new InvoiceSelectionListeners(this);
    /**
     * Creates new form InvLineFrame
     */
    public InvoiceDataFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        invHeaderjTable = new javax.swing.JTable();
        javax.swing.JButton createNewInvoicejButton1 = new javax.swing.JButton();
        createNewInvoicejButton1.addActionListener(actionListeners);
        deleteInvoicejButton2 = new javax.swing.JButton();
        deleteInvoicejButton2.addActionListener(actionListeners);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        invDateText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        invLinesjTable = new javax.swing.JTable();
        saveChangesjButton3 = new javax.swing.JButton();
        saveChangesjButton3.addActionListener(actionListeners);
        javax.swing.JButton cancelChangesjButton4 = new javax.swing.JButton();
        cancelChangesjButton4.addActionListener(actionListeners);
        invNumLabel = new javax.swing.JLabel();
        InvTotalLabel = new javax.swing.JLabel();
        custNameText1 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openjMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        invHeaderjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        invHeaderjTable.getSelectionModel().addListSelectionListener(this);
        jScrollPane1.setViewportView(invHeaderjTable);

        createNewInvoicejButton1.setText("Create new Invoice");

        deleteInvoicejButton2.setText("Delete Invoice");

        jLabel1.setText("Invoice Number");

        jLabel2.setText("Invoice Date");

        jLabel3.setText("Customer Name");

        jLabel4.setText("Invoice Total");

        invLinesjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        invLinesjTable.setName(""); // NOI18N
        jScrollPane2.setViewportView(invLinesjTable);

        saveChangesjButton3.setText("Create New Line");

        cancelChangesjButton4.setText("Delete Line");

        jMenu1.setText("File");

        openjMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, 0));
        openjMenuItem.setMnemonic('O');
        openjMenuItem.setText("Open Files");
        openjMenuItem.addActionListener(actionListeners);
        openjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openjMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(openjMenuItem);

        saveMenuItem.setMnemonic('S');
        saveMenuItem.setText("Save Files");
        saveMenuItem.addActionListener(actionListeners);
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(51, 51, 51)
                                            .addComponent(invDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(InvTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(custNameText1))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(invNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(saveChangesjButton3)
                                .addGap(81, 81, 81)
                                .addComponent(cancelChangesjButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(createNewInvoicejButton1)
                        .addGap(68, 68, 68)
                        .addComponent(deleteInvoicejButton2)))
                .addGap(3, 435, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(invNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(invDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(custNameText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(InvTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createNewInvoicejButton1)
                    .addComponent(deleteInvoicejButton2)
                    .addComponent(saveChangesjButton3)
                    .addComponent(cancelChangesjButton4))
                .addGap(81, 81, 81))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openjMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openjMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InvoiceDataFrame().setVisible(true);
               
                
            }
            
        });
    }

    public ArrayList<InvoiceHeaderCl> getHeadersArray() {
        return headersArray;
        
    }

    public void setHeadersArray(ArrayList<InvoiceHeaderCl> headersArray) {
        this.headersArray = headersArray;
    }

    public ArrayList<InvoiceLinesCl> getInvLinesArray() {
        return InvLinesArray;
    }

    public void setInvLinesArray(ArrayList<InvoiceLinesCl> InvLinesArray) {
        this.InvLinesArray = InvLinesArray;
    }
    
    public InvoiceHeaderTable getHeaderTableModel() {
        return HeaderTable;
    }

    public void setHeaderTableModel(InvoiceHeaderTable headerTableModel) {
        this.HeaderTable = headerTableModel;
    }

    public JTable getInvHTbl() {
        return invHeaderjTable;
    }

    public JTable getInvLTbl() {
        return invLinesjTable;
    }
    
     public JLabel getInvTotalLabel() {
        return InvTotalLabel;
    }

    public JTextField getCustNameText1() {
        return custNameText1;
    }

    public JTextField getInvDateText() {
        return invDateText;
    }

    public JLabel getInvNumLabel() {
        return invNumLabel;
    }
    
    
    
    /*public DefaultTableModel getMdl(JTable table) {
        if(table == invHeaderjTable )
        {
          return (DefaultTableModel) this.invHeaderjTable.getModel();
        }
        else if  (table == invLinesjTable)
                {
                return (DefaultTableModel) this.invLinesjTable.getModel();
                }
                return null;
     }*/
    
    /*public void setHeaderTableMdl(InvoiceHeaderTable hT) {
       
          invHeaderjTable.setModel(hT);
       
               
     }*/
     /*public void setLineTableMdl(InvoiceLinesTable lT) {
       
          invLinesjTable.setModel(lT);
       
               
     }*/

   
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel InvTotalLabel;
    private javax.swing.JTextField custNameText1;
    private javax.swing.JButton deleteInvoicejButton2;
    private javax.swing.JTextField invDateText;
    private javax.swing.JTable invHeaderjTable;
    private javax.swing.JTable invLinesjTable;
    private javax.swing.JLabel invNumLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem openjMenuItem;
    private javax.swing.JButton saveChangesjButton3;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

    private ActionListeners actionListeners = new ActionListeners(this);
    private  ButtonsListeners buttonActionListeners = new ButtonsListeners(this);
    

    @Override
    public void valueChanged(ListSelectionEvent e) {
        System.out.println("row selected");
        InvoiceRowselected();
    }

    private void InvoiceRowselected() {
       int dataSelectedIndex = invHeaderjTable.getSelectedRow();
       if(dataSelectedIndex>=0)
       {
          
           InvoiceHeaderCl data= HeaderTable.getInvoicesList().get(dataSelectedIndex);

           custNameText1.setText(data.getCustName());
          invDateText.setText(dataFormat.format(data.getInvDate()));
           invNumLabel.setText(String.valueOf(data.getInvNumber()));
           InvTotalLabel.setText(String.valueOf(data.getInvTotal()));
           ArrayList<InvoiceLinesCl> invLines= data.getLines();
           setInvLinesArray(invLines); //need to check it again 
           LinesTable= new InvoiceLinesTable(invLines);
           invLinesjTable.setModel(LinesTable);
           LinesTable.fireTableDataChanged();
          
          
          
           
       }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
         switch (e.getActionCommand()) {
             
             case "createInvoiceOK":
                 
                createInvoiceOK();
                break;
                     
            case "createLineOK":
                createLineOK();
                break;
                
            case "createLineCancel":
                createLineCancel();
                break;
         }
    }

  

    private void createInvoiceOK() {
        String customerName= headerDialog.getCustomerNameText().getText();
        String invoiceDatestr = headerDialog.getInvoiceDateText().getText();
        headerDialog.setVisible(false);
         headerDialog.dispose();
        headerDialog=null;
        
        try
        {
            Date invoiceDate= dataFormat.parse(invoiceDatestr);
            int invNum= getNextInvoiceNumb();
            InvoiceHeaderCl headerobj= new InvoiceHeaderCl(invNum, invoiceDate,customerName);
            invHeaders.add(headerobj);
            HeaderTable.fireTableDataChanged();
            
            
        }catch (ParseException ex) {
            ex.printStackTrace();
        }
        
    }
    private int getNextInvoiceNumb()
    {
        int limit= 0;
        for (InvoiceHeaderCl header: invHeaders)
        {
            if(header.getInvNumber()>limit)
            {
                limit= header.getInvNumber();
            }
            
        }
        return limit+1;
    }

    private void createLineCancel() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void createLineOK() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    

    

   
    
    
    
    
    
}


